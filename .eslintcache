[{"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/index.js":"1","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/reportWebVitals.js":"2","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/App.js":"3","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/LeftSideBar.js":"4","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/UserRepositories/UserRepositories.js":"5","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/ContentFeed.js":"6","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LoggedInPage/LoggedInPage.js":"7","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/RegisterPage/RegisterPage.js":"8","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LogInPage/LogInPage.js":"9","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/HomePage/HomePage.js":"10","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/TopBar/Topbar.js":"11","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/Image/Image.js":"12","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/Notification/Notification.js":"13","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/InviteContainer/InviteContainer.js":"14"},{"size":500,"mtime":1608569412770,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1608569412770,"results":"17","hashOfConfig":"16"},{"size":948,"mtime":1608588481476,"results":"18","hashOfConfig":"16"},{"size":7456,"mtime":1608826424249,"results":"19","hashOfConfig":"16"},{"size":1368,"mtime":1608770051478,"results":"20","hashOfConfig":"16"},{"size":7277,"mtime":1608848402612,"results":"21","hashOfConfig":"16"},{"size":822,"mtime":1608668004086,"results":"22","hashOfConfig":"16"},{"size":3755,"mtime":1608588211159,"results":"23","hashOfConfig":"16"},{"size":2700,"mtime":1608639524856,"results":"24","hashOfConfig":"16"},{"size":406,"mtime":1608587961161,"results":"25","hashOfConfig":"16"},{"size":651,"mtime":1608588257715,"results":"26","hashOfConfig":"16"},{"size":1262,"mtime":1608846651258,"results":"27","hashOfConfig":"16"},{"size":972,"mtime":1608825577061,"results":"28","hashOfConfig":"16"},{"size":2078,"mtime":1608825956307,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1s486lp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/index.js",[],["65","66"],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/reportWebVitals.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/App.js",["67","68","69","70","71","72","73","74"],"import { React, useState } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport styles from \"./App.module.css\";\nimport LoggedInPage from \"./pages/LoggedInPage/LoggedInPage\";\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\nimport LogInPage from \"./pages/LogInPage/LogInPage\";\nimport HomePage from \"./pages/HomePage/HomePage\";\n\nfunction App(props) {\n  const [page, setPage] = useState('home');\n  const [userUUID, setUserUUID] = useState(null);\n\n  return (\n    <div className={styles.App}>\n      {page == 'home' && <HomePage switchPage={(e) => setPage(e)} />}\n      {page == 'login' && <LogInPage logIn={(e) => setUserUUID(e)} switchPage={(e) => setPage(e)} />}\n      {page == 'register' && <RegisterPage switchPage={(e) => setPage(e)} />}\n      {page == 'logged' && <LoggedInPage userUUID={userUUID} switchPage={(e) => setPage(e)} />}\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/LeftSideBar.js",["75"],"import { React, useEffect, useState } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport styles from \"./LeftSideBar.module.css\";\nimport UserRepositories from \"./UserRepositories/UserRepositories\";\nimport Notification from \"./Notification/Notification\";\nimport InviteContainer from \"./InviteContainer/InviteContainer\";\n\nconst axios = require('axios');\n\n\nfunction LeftSideBar(props) {\n    //open close tags for all the modals\n    const [AddModalOpen, setAddModalOpen] = useState(false); //add delete modal\n    const [DeleteModalOpen, setDeleteModalOpen] = useState(false); //add delete modal\n    const [NotificationsModalOpen, setNotificationsModalOpen] = useState(false);\n\n    //info of the user and repo they're on\n    const [userUUID, setUserUUID] = useState(null);\n    const [repoID, setRepoID] = useState(null);\n\n    //info when creating new repo\n    const [publicRepo, setPublicRepo] = useState(true);\n    const [repoName, setRepoName] = useState(null);\n\n    //used to display errors in the modals\n    const [errorMessage, setErrorMessage] = useState(false);\n\n    //Used to update when changes happen\n    const [refreshFeed, setRefreshFeed] = useState(false);\n\n    //Used for holding all the notifications for the user\n    const [NotificationsArray, setNotificationsArray] = useState([]); //empty arr initially\n\n\n    useEffect(() => {\n        setUserUUID(props.userUUID);\n    }, [props.userUUID])\n\n\n    useEffect(() => {\n        getAllNotifs();\n\n    }, [userUUID]);\n\n    const deleteRepo = () => {\n        if (repoID != null && userUUID != null) {\n            var inputRepoID = repoID;\n            setRepoID(null);\n            if (document.getElementById(\"delete-repo\") != null) document.getElementById(\"delete-repo\").reset();\n\n\n            axios.post(\"http://localhost:5000/repo/deleteRepo\", {\n                userUUID: userUUID,\n                repoID: inputRepoID\n            }).then((response) => {\n\n                setRefreshFeed(!refreshFeed);\n                setDeleteModalOpen(false);\n\n            }).catch((error) => {\n                setErrorMessage(error.toString());\n\n\n            });\n        }\n    }\n\n\n    const createRepo = () => {\n        if (repoName != null && userUUID != null) {\n            var inputRepoName = repoName;\n\n            setRepoName(null);\n            if (document.getElementById(\"create-repo\") != null) document.getElementById(\"create-repo\").reset();\n\n\n            axios.post(\"http://localhost:5000/repo/newRepo\", {\n                userUUID: userUUID,\n                repoName: inputRepoName,\n                publicRepo: publicRepo\n            }).then((response) => {\n                setRefreshFeed(!refreshFeed);\n                setAddModalOpen(false);\n                setPublicRepo(true);\n\n\n            }).catch((error) => {\n                setErrorMessage(error.toString());\n\n\n            });\n        }\n    }\n\n    const getAllNotifs = () => {\n        if (userUUID != null) {\n            axios.get(\"http://localhost:5000/repoInvite/getInvites\", {\n                params: {\n                    userUUID: userUUID\n                }\n            }).then((response) => {\n                setNotificationsArray(response.data);\n            }).catch((error) => {\n                alert(error);\n            })\n        }\n    }\n\n\n\n    return (\n        <div className={styles.LeftSideBarContainer}>\n\n            <div className={styles.AddDeleteImages}>\n                <button onClick={() => setAddModalOpen(true)} className={styles.ImageButton}>\n                    New Repo\n                </button>\n                <div >\n                    <Modal className={styles.Modal} open={AddModalOpen} onClose={() => {\n                        setAddModalOpen(false);\n                        setErrorMessage(false);\n                    }} >\n                        <form id=\"create-repo\" className={styles.ModalContent}>\n                            {errorMessage && <div>{errorMessage}</div>}\n\n                            <div className={styles.inputSection}>\n                                <div ><div>Repo Name*:</div><input onChange={(e) => setRepoName(e.target.value)}></input></div>\n                                <div ><div>Private *</div><input onClick={(e) => {\n                                    setPublicRepo(!publicRepo);\n                                    console.log(publicRepo);\n                                }} type=\"checkbox\"></input></div>\n                                <button type=\"button\" onClick={() => createRepo()} className={styles.SubmissionButton}>Create Repo</button>\n\n                            </div>\n\n\n\n                        </form>\n                    </Modal>\n\n                </div>\n\n\n\n                <button onClick={() => setDeleteModalOpen(true)} className={styles.ImageButton}>\n                    Delete Repo\n                </button>\n\n                <div >\n                    <Modal className={styles.Modal} open={DeleteModalOpen} onClose={() => {\n                        setDeleteModalOpen(false);\n                        setErrorMessage(false);\n                    }} >\n\n                        <form id=\"delete-repo\" className={styles.ModalContent}>\n                            <div>{errorMessage && <div>{errorMessage}</div>}</div>\n\n                            <div className={styles.inputSection}>\n                                <div ><div>Repo ID*:</div><input onChange={(e) => setRepoID(e.target.value)}></input></div>\n                                <button type=\"button\" onClick={() => deleteRepo()} className={styles.SubmissionButton}>Delete Repo</button>\n\n                            </div>\n\n                        </form>\n\n                    </Modal>\n\n                </div>\n            </div>\n\n\n            <div className={styles.RepoContainer}>\n                <UserRepositories setContentFeed={props.setContentFeed} refreshFeed={refreshFeed} userUUID={props.userUUID} />\n            </div>\n\n            <div className={styles.BottomLeftContainer}>\n                <button onClick={() => props.switchPage(\"home\")} className={styles.BottomLeftButton}>\n                    Log Out\n                </button>\n\n\n                <button onClick={() => {\n                    setNotificationsModalOpen(true);\n                    getAllNotifs();\n                }} className={styles.BottomLeftButton}>\n                    Notifications\n                </button>\n\n                <div >\n                    <Modal className={styles.Modal} open={NotificationsModalOpen} onClose={() => {\n                        setNotificationsModalOpen(false);\n\n                    }} >\n\n                        <div className={styles.NotificationsModalContainer}>\n                            <div className={styles.NotificationsContainer}>\n                                <div>Notifications would appear below</div>\n                                {NotificationsArray.map((notification) => <Notification\n                                    inviteId={notification.invite_id}\n                                    repoId={notification.repo_id}\n                                    userUUID={userUUID}\n                                    refreshNotifications={() => getAllNotifs()}\n                                />)}\n\n                            </div>\n                            <InviteContainer userUUID={userUUID} />\n\n                        </div>\n\n                    </Modal>\n\n                </div>\n\n            </div>\n\n        </div >\n    );\n}\n\nexport default LeftSideBar;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/UserRepositories/UserRepositories.js",["76","77","78"],"import { React, useEffect, useState } from \"react\";\n\nimport styles from \"./UserRepositories.module.css\";\n\nconst axios = require('axios');\n\nfunction UserRepositories(props) {\n    const [repositories, setRepositories] = useState(null);\n\n    useEffect(() => {\n        refresh();\n\n    }, [props.userUUID]);\n\n    useEffect(() => {\n        refresh();\n    }, [props.refreshFeed]);\n\n    const refresh = () => {\n        if (props.userUUID != null && props.userUUID.length != 0) {\n            axios.get(\"http://localhost:5000/repo/getRepos\", {\n                params: {\n                    userUUID: props.userUUID\n                }\n\n            }).then((response) => {\n                setRepositories(null);\n                setRepositories(response.data);\n            }).catch((error) => {\n                alert(\"err!\");\n            });\n        }\n\n    }\n\n    return (\n        <div className={styles.container}>\n\n\n            {repositories != null && repositories.map((repository) => {\n\n                return (\n                    <button onClick={() => props.setContentFeed(repository.repo_id)} className={styles.Repo} >\n                        <div>Repo Name : {repository.name}</div>\n                        <div>Repo Id: {repository.repo_id}</div>\n                    </button>\n                );\n            })}\n\n        </div >\n    );\n}\n\nexport default UserRepositories;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/ContentFeed.js",["79","80","81","82"],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LoggedInPage/LoggedInPage.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/RegisterPage/RegisterPage.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LogInPage/LogInPage.js",["83"],"import React, { useContext, useState } from \"react\";\n\nimport styles from \"./LogInPage.module.css\";\nimport TopBar from \"../../components/TopBar/Topbar\";\n\nconst axios = require('axios');\n\n\nfunction LogInPage(props) {\n\n    const [username, setUsername] = useState(false);\n    const [password, setPassword] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n\n\n    /**\n     * On submit of form, sends data through POST to my API\n     */\n    const handleSubmit = () => {\n\n        if (username && password) {\n\n            axios.post(\"http://localhost:5000/user/userLogin\", {\n                username: username,\n                password: password\n\n            }).then((response) => {\n                setErrorMessage(\"logged\");\n                if (document.getElementById(\"login-form\") != null) document.getElementById(\"login-form\").reset();\n\n                props.logIn(response.data.userUUID);\n                props.switchPage(\"logged\")\n\n\n            }).catch((error) => {\n                setErrorMessage(\"Invalid input!\");\n                if (document.getElementById(\"login-form\") != null) document.getElementById(\"login-form\").reset();\n\n\n            });\n\n\n            setUsername(false);\n            setPassword(false);\n\n\n        } else setErrorMessage(\"Please fill the entire form\");\n    }\n\n    return (\n        <div className={styles.container} >\n\n            <div className={styles.ContentContainer}>\n                <TopBar switchPage={props.switchPage} />\n\n\n\n                <div className={styles.LoginContainer}>\n\n                    <form id=\"login-form\" className={styles.LoginForm} >\n\n                        <div className={styles.error}>\n                            {errorMessage && <div >{errorMessage}</div>}\n\n                        </div>\n\n\n                        <div className={styles.FormSection}>\n                            <div>\n                                <div>Username *</div>\n                                <input onChange={(e) => setUsername(e.target.value)} name=\"username\"></input>\n                            </div>\n\n                            <div>\n                                <div>Password *</div>\n                                <input onChange={(e) => setPassword(e.target.value)} name=\"password\"></input>\n                            </div>\n                        </div>\n\n\n                        <div className={styles.submitContainer}>\n                            <button type=\"button\" className={styles.submitButton} onClick={() => handleSubmit()} >Submit</button>\n\n                        </div>\n                    </form>\n\n\n                </div>\n\n\n\n\n\n            </div>\n\n\n        </div >\n    );\n}\n\nexport default LogInPage;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/HomePage/HomePage.js",["84"],"import { React, useState } from \"react\";\nimport TopBar from \"../../components/TopBar/Topbar\";\n\nimport styles from \"./HomePage.module.css\";\n\n\n\nfunction HomePage(props) {\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.centerContainer}>\n                <TopBar switchPage={props.switchPage} />\n\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/TopBar/Topbar.js",["85"],"import { React, useState } from \"react\";\n\nimport styles from \"./TopBar.module.css\";\n\n\n\nfunction TopBar(props) {\n\n    return (\n\n\n        <div className={styles.TopBar}>\n            <button onClick={() => props.switchPage(\"home\")} className={styles.Buttons}>\n                Back to Home Page\n           </button>\n\n\n            <button onClick={() => props.switchPage(\"login\")} className={styles.Buttons}>\n                Log In Page\n             </button>\n\n            <button onClick={() => props.switchPage(\"register\")} className={styles.Buttons}>\n                Register Page\n             </button>\n        </div>\n\n    );\n}\n\nexport default TopBar;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/Image/Image.js",["86","87","88","89","90"],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/Notification/Notification.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/InviteContainer/InviteContainer.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":4,"column":20,"nodeType":"97","messageId":"98","endLine":4,"endColumn":26},{"ruleId":"95","severity":1,"message":"99","line":5,"column":3,"nodeType":"97","messageId":"98","endLine":5,"endColumn":9},{"ruleId":"95","severity":1,"message":"100","line":6,"column":3,"nodeType":"97","messageId":"98","endLine":6,"endColumn":8},{"ruleId":"95","severity":1,"message":"101","line":7,"column":3,"nodeType":"97","messageId":"98","endLine":7,"endColumn":7},{"ruleId":"102","severity":1,"message":"103","line":22,"column":13,"nodeType":"104","messageId":"105","endLine":22,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":23,"column":13,"nodeType":"104","messageId":"105","endLine":23,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":24,"column":13,"nodeType":"104","messageId":"105","endLine":24,"endColumn":15},{"ruleId":"102","severity":1,"message":"103","line":25,"column":13,"nodeType":"104","messageId":"105","endLine":25,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":44,"column":8,"nodeType":"108","endLine":44,"endColumn":18,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":13,"column":8,"nodeType":"108","endLine":13,"endColumn":24,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"110","line":17,"column":8,"nodeType":"108","endLine":17,"endColumn":27,"suggestions":"112"},{"ruleId":"102","severity":1,"message":"113","line":20,"column":61,"nodeType":"104","messageId":"105","endLine":20,"endColumn":63},{"ruleId":"106","severity":1,"message":"114","line":72,"column":8,"nodeType":"108","endLine":72,"endColumn":22,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"116","line":79,"column":8,"nodeType":"108","endLine":79,"endColumn":27,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"116","line":85,"column":8,"nodeType":"108","endLine":85,"endColumn":20,"suggestions":"118"},{"ruleId":"102","severity":1,"message":"103","line":126,"column":40,"nodeType":"104","messageId":"105","endLine":126,"endColumn":42},{"ruleId":"95","severity":1,"message":"119","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":27},{"ruleId":"95","severity":1,"message":"120","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"120","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"121","line":8,"column":12,"nodeType":"97","messageId":"98","endLine":8,"endColumn":23},{"ruleId":"95","severity":1,"message":"122","line":8,"column":25,"nodeType":"97","messageId":"98","endLine":8,"endColumn":39},{"ruleId":"123","severity":1,"message":"124","line":20,"column":17,"nodeType":"97","messageId":"125","endLine":20,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":24,"column":29,"nodeType":"104","messageId":"105","endLine":24,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":43,"column":13,"nodeType":"128","endLine":43,"endColumn":64},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllNotifs'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.",["132"],["133"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'props.contentFeed', 'props.userUUID', 'tagInput', and 'uploadedImages'. Either include them or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'updateImageArray'. Either include it or remove the dependency array.",["135"],["136"],"'useContext' is defined but never used.","'useState' is defined but never used.","'toBeRemoved' is assigned a value but never used.","'setToBeRemoved' is assigned a value but never used.","no-redeclare","'temp' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [getAllNotifs, userUUID]",{"range":"149","text":"150"},"Update the dependencies array to be: [props.userUUID, refresh]",{"range":"151","text":"152"},"Update the dependencies array to be: [props.refreshFeed, refresh]",{"range":"153","text":"154"},"Update the dependencies array to be: [props.contentFeed, props.userUUID, submitImages, tagInput, uploadedImages]",{"range":"155","text":"156"},"Update the dependencies array to be: [props.contentFeed, updateImageArray]",{"range":"157","text":"158"},"Update the dependencies array to be: [updateFeed, updateImageArray]",{"range":"159","text":"160"},[1473,1483],"[getAllNotifs, userUUID]",[284,300],"[props.userUUID, refresh]",[352,371],"[props.refreshFeed, refresh]",[2067,2081],"[props.contentFeed, props.userUUID, submitImages, tagInput, uploadedImages]",[2178,2197],"[props.contentFeed, updateImageArray]",[2347,2359],"[updateFeed, updateImageArray]"]