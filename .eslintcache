[{"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/index.js":"1","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/reportWebVitals.js":"2","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/App.js":"3","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/LeftSideBar.js":"4","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/UserRepositories/UserRepositories.js":"5","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/ContentFeed.js":"6","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LoggedInPage/LoggedInPage.js":"7","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/RegisterPage/RegisterPage.js":"8","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LogInPage/LogInPage.js":"9","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/HomePage/HomePage.js":"10","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/TopBar/Topbar.js":"11","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/Image/Image.js":"12","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/Notification/Notification.js":"13","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/InviteContainer/InviteContainer.js":"14"},{"size":500,"mtime":1608569412770,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1608569412770,"results":"17","hashOfConfig":"16"},{"size":948,"mtime":1608880485185,"results":"18","hashOfConfig":"16"},{"size":7652,"mtime":1608927193411,"results":"19","hashOfConfig":"16"},{"size":3327,"mtime":1608927193415,"results":"20","hashOfConfig":"16"},{"size":7622,"mtime":1608927193411,"results":"21","hashOfConfig":"16"},{"size":822,"mtime":1608927193415,"results":"22","hashOfConfig":"16"},{"size":3755,"mtime":1608588211159,"results":"23","hashOfConfig":"16"},{"size":2700,"mtime":1608639524856,"results":"24","hashOfConfig":"16"},{"size":406,"mtime":1608587961161,"results":"25","hashOfConfig":"16"},{"size":651,"mtime":1608588257715,"results":"26","hashOfConfig":"16"},{"size":1245,"mtime":1608927193411,"results":"27","hashOfConfig":"16"},{"size":1009,"mtime":1608927193415,"results":"28","hashOfConfig":"16"},{"size":2078,"mtime":1608927193411,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1s486lp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/index.js",[],["67","68"],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/reportWebVitals.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/App.js",["69","70","71","72","73","74","75","76"],"import { React, useState } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport styles from \"./App.module.css\";\nimport LoggedInPage from \"./pages/LoggedInPage/LoggedInPage\";\nimport RegisterPage from \"./pages/RegisterPage/RegisterPage\";\nimport LogInPage from \"./pages/LogInPage/LogInPage\";\nimport HomePage from \"./pages/HomePage/HomePage\";\n\nfunction App(props) {\n  const [page, setPage] = useState('home');\n  const [userUUID, setUserUUID] = useState(null);\n\n  return (\n    <div className={styles.App}>\n      {page == 'home' && <HomePage switchPage={(e) => setPage(e)} />}\n      {page == 'login' && <LogInPage logIn={(e) => setUserUUID(e)} switchPage={(e) => setPage(e)} />}\n      {page == 'register' && <RegisterPage switchPage={(e) => setPage(e)} />}\n      {page == 'logged' && <LoggedInPage userUUID={userUUID} switchPage={(e) => setPage(e)} />}\n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/LeftSideBar.js",["77"],"import { React, useEffect, useState } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\n\nimport styles from \"./LeftSideBar.module.css\";\nimport UserRepositories from \"./UserRepositories/UserRepositories\";\n\nconst axios = require('axios');\n\n\nfunction LeftSideBar(props) {\n    const [AddModalOpen, setAddModalOpen] = useState(false); //add delete modal\n    const [DeleteModalOpen, setDeleteModalOpen] = useState(false); //add delete modal\n\n    const [userUUID, setUserUUID] = useState(null);\n\n    const [publicRepo, setPublicRepo] = useState(true);\n    const [repoName, setRepoName] = useState(null);\n\n    const [repoID, setRepoID] = useState(null);\n\n    const [errorMessage, setErrorMessage] = useState(false);\n    const [refreshFeed, setRefreshFeed] = useState(false);\n\n\n    useEffect(() => {\n        setUserUUID(props.userUUID);\n    }, [props.userUUID])\n\n\n    const deleteRepo = () => {\n        if (repoID != null && userUUID != null) {\n            var inputRepoID = repoID;\n            setRepoID(null);\n            if (document.getElementById(\"delete-repo\") != null) document.getElementById(\"delete-repo\").reset();\n\n\n            axios.post(\"http://localhost:5000/repo/deleteRepo\", {\n                userUUID: userUUID,\n                repoID: inputRepoID\n            }).then((response) => {\n\n                setRefreshFeed(!refreshFeed);\n                setDeleteModalOpen(false);\n\n            }).catch((error) => {\n                setErrorMessage(error.toString());\n\n\n            });\n        }\n    }\n\n\n    const createRepo = () => {\n        if (repoName != null && userUUID != null) {\n            var inputRepoName = repoName;\n            var inputPublicRepo = publicRepo;\n\n            setRepoName(null);\n            setPublicRepo(true);\n            if (document.getElementById(\"create-repo\") != null) document.getElementById(\"create-repo\").reset();\n\n\n            axios.post(\"http://localhost:5000/repo/newRepo\", {\n                userUUID: userUUID,\n                repoName: inputRepoName,\n                publicRepo: inputPublicRepo\n            }).then((response) => {\n                setRefreshFeed(!refreshFeed);\n                setAddModalOpen(false);\n\n            }).catch((error) => {\n                setErrorMessage(error.toString());\n\n\n            });\n        }\n    }\n\n\n    return (\n        <div className={styles.LeftSideBarContainer}>\n\n            <div className={styles.AddDeleteImages}>\n                <button onClick={() => setAddModalOpen(true)} className={styles.ImageButton}>\n                    New Repo\n                </button>\n                <div >\n                    <Modal className={styles.AddDeleteModal} open={AddModalOpen} onClose={() => {\n                        setAddModalOpen(false);\n                        setErrorMessage(false);\n                    }} >\n                        <form id=\"create-repo\" className={styles.ModalContent}>\n                            {errorMessage && <div>{errorMessage}</div>}\n\n                            <div className={styles.inputSection}>\n                                <div ><div>Repo Name*:</div><input onChange={(e) => setRepoName(e.target.value)}></input></div>\n                                <div ><div>Private *</div><input onClick={(e) => {\n                                    setPublicRepo(!publicRepo);\n                                }} type=\"checkbox\"></input></div>\n                                <button type=\"button\" onClick={() => createRepo()} className={styles.SubmissionButton}>Create Repo</button>\n\n                            </div>\n\n\n\n                        </form>\n                    </Modal>\n\n                </div>\n\n\n\n                <button onClick={() => setDeleteModalOpen(true)} className={styles.ImageButton}>\n                    Delete Repo\n                </button>\n\n                <div >\n                    <Modal className={styles.AddDeleteModal} open={DeleteModalOpen} onClose={() => {\n                        setDeleteModalOpen(false);\n                        setErrorMessage(false);\n                    }} >\n\n                        <form id=\"delete-repo\" className={styles.ModalContent}>\n                            <div>{errorMessage && <div>{errorMessage}</div>}</div>\n\n                            <div className={styles.inputSection}>\n                                <div ><div>Repo ID*:</div><input onChange={(e) => setRepoID(e.target.value)}></input></div>\n                                <button type=\"button\" onClick={() => deleteRepo()} className={styles.SubmissionButton}>Delete Repo</button>\n\n                            </div>\n\n                        </form>\n\n                    </Modal>\n\n                </div>\n            </div>\n\n\n            <div className={styles.RepoContainer}>\n                <UserRepositories setContentFeed={props.setContentFeed} refreshFeed={refreshFeed} userUUID={props.userUUID} />\n            </div>\n\n            <div className={styles.LogoutContainer}>\n                <button onClick={() => props.switchPage(\"home\")} className={styles.Logout}>\n                    Log Out\n                </button>\n\n            </div>\n\n        </div >\n    );\n}\n\nexport default LeftSideBar;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/UserRepositories/UserRepositories.js",["78","79","80","81","82"],"import { Modal } from \"@material-ui/core\";\nimport { React, useEffect, useState } from \"react\";\n\nimport styles from \"./UserRepositories.module.css\";\n\nconst axios = require('axios');\n\nfunction UserRepositories(props) {\n    const [repositories, setRepositories] = useState(null);\n\n    const [RenameModalOpen, setRenameModalOpen] = useState(false);\n    const [RenameInputText, setRenameInputText] = useState(null);\n    const [RepoToRename, setRepoToRename] = useState(-1);\n    const [CurrentRepoName, setCurrentRepoName] = useState(null);\n\n    useEffect(() => {\n        refresh();\n\n    }, [props.userUUID]);\n\n    useEffect(() => {\n        refresh();\n    }, [props.refreshFeed]);\n\n    const refresh = () => {\n        if (props.userUUID != null && props.userUUID.length != 0) {\n            axios.get(\"http://localhost:5000/repo/getRepos\", {\n                params: {\n                    userUUID: props.userUUID\n                }\n\n            }).then((response) => {\n                setRepositories(null);\n                setRepositories(response.data);\n            }).catch((error) => {\n                alert(\"err!\");\n            });\n        }\n\n    }\n\n    const renameRepo = () => {\n        if (RepoToRename != -1 && CurrentRepoName != null && RenameInputText != null && RenameInputText != '') {\n            axios.post(\"http://localhost:5000/repo/renameRepo\", {\n                userUUID: props.userUUID,\n                repoId: RepoToRename,\n                newRepoName: RenameInputText\n            }).then((response) => {\n                console.log(response);\n                refresh();\n                setRenameModalOpen(false);\n            })\n        }\n    }\n\n    return (\n        <div className={styles.container}>\n\n\n            {repositories != null && repositories.map((repository) => {\n\n                return (\n                    <button onClick={() => props.setContentFeed(repository.repo_id)} className={styles.Repo} >\n                        <div>\n                            <div>Repo Name : {repository.name}</div>\n                            <div>Repo Id: {repository.repo_id}</div>\n                        </div>\n                        <button onClick={() => {\n                            setRenameInputText(null);\n                            setRepoToRename(repository.repo_id);\n                            setCurrentRepoName(repository.name);\n                            setRenameModalOpen(true);\n                        }}>\n\n                            rename\n                        </button>\n\n\n                    </button>\n                );\n            })}\n\n            <Modal className={styles.Modal} open={RenameModalOpen} onClose={() => {\n                setRenameModalOpen(false);\n                setRenameInputText(null);\n                setRepoToRename(-1);\n            }} >\n\n                <div className={styles.ModalContent}>\n                    <div>Rename  '{CurrentRepoName}' with id '{RepoToRename}'  to: </div>\n                    <div>\n                        <input onChange={(e) => setRenameInputText(e.target.value)} className={styles.renameTextBox} type=\"text\"></input>\n                        <button onClick={() => renameRepo()} >Rename Repo!</button>\n                    </div>\n                </div>\n            </Modal>\n\n        </div >\n\n\n    );\n}\n\nexport default UserRepositories;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/ContentFeed.js",["83","84","85","86"],"import { React, useState } from \"react\";\n\nimport styles from \"./ContentFeed.module.css\";\nimport Image from \"./Image/Image\";\n\n//axios request toget all user repositories\n\nfunction ContentFeed(props) {\n\n    const [removingImages, setRemovingImages] = useState(false);\n    const [imageArray, setImageArray] = useState(new Array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5));\n\n    const getRepoImages = () => {\n\n    }\n\n    return (\n        <div className={styles.container} >\n\n            {/* { props.contentFeed == null ? <div></div> :\n                \n\n            } */}\n\n            <div className={styles.ContentContainer}>\n                <div className={styles.InputSection}>\n                    <div onClick={() => setRemovingImages(true)} className={styles.ToggleRemove}>\n                        Remove Images?\n                    </div>\n                    {removingImages && <div onClick={() => {\n                        setRemovingImages(false);\n                    }} className={styles.RemoveSubmit}>Remove Selected</div>}\n\n                </div>\n\n\n                <div className={styles.ImageContainer}>\n\n                    {imageArray.map((image) => <Image canBeRemoved={removingImages} imageUrl={image} />)}\n\n                </div>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default ContentFeed;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LoggedInPage/LoggedInPage.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/RegisterPage/RegisterPage.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/LogInPage/LogInPage.js",["87"],"import React, { useContext, useState } from \"react\";\n\nimport styles from \"./LogInPage.module.css\";\nimport TopBar from \"../../components/TopBar/Topbar\";\n\nconst axios = require('axios');\n\n\nfunction LogInPage(props) {\n\n    const [username, setUsername] = useState(false);\n    const [password, setPassword] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(false);\n\n\n    /**\n     * On submit of form, sends data through POST to my API\n     */\n    const handleSubmit = () => {\n\n        if (username && password) {\n\n            axios.post(\"http://localhost:5000/user/userLogin\", {\n                username: username,\n                password: password\n\n            }).then((response) => {\n                setErrorMessage(\"logged\");\n                if (document.getElementById(\"login-form\") != null) document.getElementById(\"login-form\").reset();\n\n                props.logIn(response.data.userUUID);\n                props.switchPage(\"logged\")\n\n\n            }).catch((error) => {\n                setErrorMessage(\"Invalid input!\");\n                if (document.getElementById(\"login-form\") != null) document.getElementById(\"login-form\").reset();\n\n\n            });\n\n\n            setUsername(false);\n            setPassword(false);\n\n\n        } else setErrorMessage(\"Please fill the entire form\");\n    }\n\n    return (\n        <div className={styles.container} >\n\n            <div className={styles.ContentContainer}>\n                <TopBar switchPage={props.switchPage} />\n\n\n\n                <div className={styles.LoginContainer}>\n\n                    <form id=\"login-form\" className={styles.LoginForm} >\n\n                        <div className={styles.error}>\n                            {errorMessage && <div >{errorMessage}</div>}\n\n                        </div>\n\n\n                        <div className={styles.FormSection}>\n                            <div>\n                                <div>Username *</div>\n                                <input onChange={(e) => setUsername(e.target.value)} name=\"username\"></input>\n                            </div>\n\n                            <div>\n                                <div>Password *</div>\n                                <input onChange={(e) => setPassword(e.target.value)} name=\"password\"></input>\n                            </div>\n                        </div>\n\n\n                        <div className={styles.submitContainer}>\n                            <button type=\"button\" className={styles.submitButton} onClick={() => handleSubmit()} >Submit</button>\n\n                        </div>\n                    </form>\n\n\n                </div>\n\n\n\n\n\n            </div>\n\n\n        </div >\n    );\n}\n\nexport default LogInPage;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/pages/HomePage/HomePage.js",["88"],"import { React, useState } from \"react\";\nimport TopBar from \"../../components/TopBar/Topbar\";\n\nimport styles from \"./HomePage.module.css\";\n\n\n\nfunction HomePage(props) {\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.centerContainer}>\n                <TopBar switchPage={props.switchPage} />\n\n            </div>\n        </div>\n    );\n}\n\nexport default HomePage;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/TopBar/Topbar.js",["89"],"import { React, useState } from \"react\";\n\nimport styles from \"./TopBar.module.css\";\n\n\n\nfunction TopBar(props) {\n\n    return (\n\n\n        <div className={styles.TopBar}>\n            <button onClick={() => props.switchPage(\"home\")} className={styles.Buttons}>\n                Back to Home Page\n           </button>\n\n\n            <button onClick={() => props.switchPage(\"login\")} className={styles.Buttons}>\n                Log In Page\n             </button>\n\n            <button onClick={() => props.switchPage(\"register\")} className={styles.Buttons}>\n                Register Page\n             </button>\n        </div>\n\n    );\n}\n\nexport default TopBar;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/ContentFeed/Image/Image.js",["90","91","92","93","94"],"import { React, useState } from \"react\";\n\nimport styles from \"./Image.module.css\";\n\n//axios request toget all user repositories\n\nfunction Image(props) {\n    const [toBeRemoved, setToBeRemoved] = useState(false);\n\n    return (\n        <div className={styles.ImageContainer} >\n            <div>title {props.canBeRemoved && <input onClick={(e) => setToBeRemoved(!toBeRemoved)} type=\"checkbox\"></input>}</div>\n            <img src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg\" className={styles.Image}></img>\n            <div> 5 tags</div>\n        </div>\n    );\n}\n\nexport default Image;\n","/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/Notification/Notification.js",[],"/home/osama/projects/shopifyFrontEnd/shopify-image-host-frontend/src/components/LeftSideBar/InviteContainer/InviteContainer.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":4,"column":20,"nodeType":"101","messageId":"102","endLine":4,"endColumn":26},{"ruleId":"99","severity":1,"message":"103","line":5,"column":3,"nodeType":"101","messageId":"102","endLine":5,"endColumn":9},{"ruleId":"99","severity":1,"message":"104","line":6,"column":3,"nodeType":"101","messageId":"102","endLine":6,"endColumn":8},{"ruleId":"99","severity":1,"message":"105","line":7,"column":3,"nodeType":"101","messageId":"102","endLine":7,"endColumn":7},{"ruleId":"106","severity":1,"message":"107","line":22,"column":13,"nodeType":"108","messageId":"109","endLine":22,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":23,"column":13,"nodeType":"108","messageId":"109","endLine":23,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":24,"column":13,"nodeType":"108","messageId":"109","endLine":24,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":25,"column":13,"nodeType":"108","messageId":"109","endLine":25,"endColumn":15},{"ruleId":"110","severity":1,"message":"111","line":44,"column":8,"nodeType":"112","endLine":44,"endColumn":18,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":19,"column":8,"nodeType":"112","endLine":19,"endColumn":24,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"114","line":23,"column":8,"nodeType":"112","endLine":23,"endColumn":27,"suggestions":"116"},{"ruleId":"106","severity":1,"message":"117","line":26,"column":61,"nodeType":"108","messageId":"109","endLine":26,"endColumn":63},{"ruleId":"106","severity":1,"message":"117","line":43,"column":26,"nodeType":"108","messageId":"109","endLine":43,"endColumn":28},{"ruleId":"106","severity":1,"message":"117","line":43,"column":105,"nodeType":"108","messageId":"109","endLine":43,"endColumn":107},{"ruleId":"110","severity":1,"message":"118","line":73,"column":8,"nodeType":"112","endLine":73,"endColumn":22,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":80,"column":8,"nodeType":"112","endLine":80,"endColumn":27,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"120","line":86,"column":8,"nodeType":"112","endLine":86,"endColumn":20,"suggestions":"122"},{"ruleId":"106","severity":1,"message":"107","line":131,"column":40,"nodeType":"108","messageId":"109","endLine":131,"endColumn":42},{"ruleId":"99","severity":1,"message":"123","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"124","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"124","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"125","line":8,"column":12,"nodeType":"101","messageId":"102","endLine":8,"endColumn":23},{"ruleId":"99","severity":1,"message":"126","line":8,"column":25,"nodeType":"101","messageId":"102","endLine":8,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":20,"column":17,"nodeType":"101","messageId":"129","endLine":20,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":24,"column":29,"nodeType":"108","messageId":"109","endLine":24,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":45,"column":13,"nodeType":"132","endLine":45,"endColumn":64},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllNotifs'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.",["136"],["137"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'props.contentFeed', 'props.userUUID', 'tagInput', and 'uploadedImages'. Either include them or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'updateImageArray'. Either include it or remove the dependency array.",["139"],["140"],"'useContext' is defined but never used.","'useState' is defined but never used.","'toBeRemoved' is assigned a value but never used.","'setToBeRemoved' is assigned a value but never used.","no-redeclare","'temp' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [getAllNotifs, userUUID]",{"range":"153","text":"154"},"Update the dependencies array to be: [props.userUUID, refresh]",{"range":"155","text":"156"},"Update the dependencies array to be: [props.refreshFeed, refresh]",{"range":"157","text":"158"},"Update the dependencies array to be: [props.contentFeed, props.userUUID, submitImages, tagInput, uploadedImages]",{"range":"159","text":"160"},"Update the dependencies array to be: [props.contentFeed, updateImageArray]",{"range":"161","text":"162"},"Update the dependencies array to be: [updateFeed, updateImageArray]",{"range":"163","text":"164"},[1473,1483],"[getAllNotifs, userUUID]",[585,601],"[props.userUUID, refresh]",[653,672],"[props.refreshFeed, refresh]",[2286,2300],"[props.contentFeed, props.userUUID, submitImages, tagInput, uploadedImages]",[2397,2416],"[props.contentFeed, updateImageArray]",[2566,2578],"[updateFeed, updateImageArray]"]